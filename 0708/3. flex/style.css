.parent {
  border: 1px solid red;
  height: 500px;
  display: flex;
  /* 자식요소들을 정렬 */
  /* space-around : 일정하게 간격 조절 후 가운데 정렬 */
  /* space-between : 좌우 여백없이 간격 조절 후 가운데 정렬 */
  justify-content: space-between;

  /* 자식요소들을 세로정렬 */
  align-items: center;
}

/* 
  flex 박스에 자식으로 있는 요소는 
  높이를 설정하지 않으면 부모크기에 맞춰짐
*/
.child {
  background-color: pink;
  width: 100px;
  height: 100px;
}

.parent2 {
  display: flex;
  border: 1px solid red;
  width: 500px;
  height: 500px;
  justify-content: center;
  align-items: center;
}

.child2 {
  width: 100px;
  height: 100px;
  background-color: skyblue;
}

.parent3 {
  border: 1px solid red;
  height: 500px;

  display: flex;
  /* 자식들 방향 배치 : 기본값이 row여서 설정안해도 가로배치 */
  /* row-reverse : 가로 역방향배치 */
  /* column : 세로배치 */
  /* column-reverse : 세로 역방향배치 */
  flex-direction: column-reverse;
}

.child3 {
  width: 100px;
  height: 100px;
  background-color: pink;
}


.parent4 {
  border: 1px solid red;
  height: 600px;

  display: flex;

  /* 부모크기에 맞춰서 넣을건지 줄바꿈할건지 설정 */
  /* nowrap(기본값) : 줄바꿈 안함 -> 자식 크기가 줄어듬 */
  /* wrap : 줄바꿈 함 */
  /* flex-wrap: wrap; */

  /* 배치 방향과 줄바꿈은 하나의 속성으로 처리가 가능함 */
  flex-flow: row wrap;

  /* wrap일 경우 자식들 간격 설정 */
  align-content: center;
  justify-content: center;
}

.parent4 > div {
  width: 100px;
  height: 100px;
  background-color: yellowgreen;
  margin: 5px;
}